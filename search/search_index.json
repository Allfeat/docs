{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction to Allfeat","text":"<p>Welcome to the Allfeat documentation! This guide is designed to provide you with all the information you need to use, develop, and contribute to Allfeat. Allfeat is a cutting-edge platform for decentralized applications (DApps) and smart contracts, offering robust features for developers and validators alike.</p>"},{"location":"#what-is-allfeat","title":"What is Allfeat?","text":"<p>Allfeat is a decentralized and secure infrastructure for the music industry</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Smart Contract Support: Allfeat supports the deployment and execution of smart contracts, enabling developers to create decentralized applications with complex business logic.</li> <li>Validator Nodes: The platform offers opportunities for users to participate as validator nodes, securing the network and earning rewards in return.</li> <li>EVM Compatibility: Allfeat is compatible with the Ethereum Virtual Machine (EVM), allowing for seamless migration of Ethereum-based DApps and smart contracts.</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>To get started with Allfeat, you'll need to follow a few basic steps:</p> <ol> <li> <p>Set up your development environment: Make sure you have the necessary tools and dependencies installed.</p> </li> <li> <p>Run a local node: Learn how to run a local Allfeat node for development and testing purposes.</p> </li> <li> <p>Develop your DApp or smart contract: Use our resources and examples to start developing on Allfeat.</p> </li> <li> <p>Deploy your project: Deploy your DApp or smart contract to the Allfeat network.</p> </li> </ol> <p>This documentation will guide you through each of these steps, providing detailed instructions and resources along the way.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>Allfeat is an open-source project, and contributions are warmly welcomed. Whether you're interested in developing features, fixing bugs, or improving documentation, your help can make a big difference.</p> <p>Check out the Contributing to Allfeat section for more information on how to get involved.</p> <p>Thank you for choosing Allfeat for your blockchain development needs. We're excited to see what you'll build!</p>"},{"location":"additional-resources/","title":"Additional Resources","text":"<p>To support your journey with Allfeat, whether you're a developer, a validator, or simply interested in the platform, we've compiled a list of additional resources. These resources range from technical documentation and tools to community forums where you can ask questions and share insights.</p>"},{"location":"additional-resources/#documentation-and-tutorials","title":"Documentation and Tutorials","text":"<ul> <li>Allfeat Official Documentation: Comprehensive guides and reference materials for Allfeat. Visit Documentation</li> <li>Substrate Developer Hub: Since Allfeat is built with Substrate, this hub offers valuable resources for understanding the underlying framework. Explore Substrate</li> </ul>"},{"location":"additional-resources/#tools-for-development","title":"Tools for Development","text":"<ul> <li>Polkadot{.js} Extension: A browser extension for managing accounts in the Polkadot and Substrate ecosystems. Get the Extension</li> <li>Ink! Playground: An online IDE for experimenting with Ink! smart contracts. Try Ink! Playground</li> </ul>"},{"location":"additional-resources/#community-and-support","title":"Community and Support","text":"<ul> <li>Allfeat Forum: Join discussions, ask questions, and connect with other Allfeat users. Join the Forum</li> <li>Allfeat Discord: A lively place for real-time chat with the Allfeat developer community. Join Discord</li> <li>Stack Overflow: Use the <code>allfeat</code> tag on Stack Overflow for technical questions. Ask on Stack Overflow</li> </ul>"},{"location":"additional-resources/#related-projects","title":"Related Projects","text":"<ul> <li>Polkadot Network: Learn about the broader ecosystem in which Allfeat operates. Discover Polkadot</li> <li>OpenZeppelin: For smart contract development, OpenZeppelin offers security products, audits, and a developer community. Explore OpenZeppelin</li> </ul>"},{"location":"additional-resources/#contributing-to-allfeat","title":"Contributing to Allfeat","text":"<p>Interested in contributing to the Allfeat project? We welcome contributions of all kinds, from code to documentation. Learn how you can contribute by visiting the Contributing Guide.</p> <p>Your involvement can help shape the future of decentralized applications and the Allfeat platform. Whether you're contributing code, participating in discussions, or simply spreading the word, every bit of support is invaluable.</p>"},{"location":"contributing/","title":"Contributing to Allfeat","text":"<p>We deeply appreciate your interest in contributing to Allfeat! All forms of contribution are welcome: from reporting bugs, improving the documentation, submitting feature requests, to writing code which can be incorporated into Allfeat itself.</p>"},{"location":"contributing/#ways-to-contribute","title":"Ways to Contribute","text":""},{"location":"contributing/#reporting-issues","title":"Reporting Issues","text":"<p>If you encounter a bug or have a suggestion for improving Allfeat, please use the GitHub Issues section of our repository. Detailed reports with explanations of the issue, its context, and ideally a way to reproduce it, are invaluable and increase the chances of the community addressing them swiftly.</p>"},{"location":"contributing/#code-contributions","title":"Code Contributions","text":"<p>For code contributions, such as bug fixes or new features, follow these steps:</p> <ol> <li>Fork the Repository: Create your own fork of the Allfeat GitHub repository.</li> <li>Clone Your Fork: Work locally on your own machine.</li> <li>Create a New Branch: Base your changes on the <code>main</code> branch.</li> <li>Submit a Pull Request (PR): Push your changes to your fork and then submit a pull request to the Allfeat repository. Provide a clear description of the changes and any additional context.</li> </ol>"},{"location":"contributing/#improving-documentation","title":"Improving Documentation","text":"<p>Good documentation is crucial for any project. You can contribute by:</p> <ul> <li>Correcting typos or grammatical errors.</li> <li>Clarifying sections with additional information or examples.</li> <li>Translating the documentation into other languages.</li> </ul>"},{"location":"contributing/#contribution-guidelines","title":"Contribution Guidelines","text":"<p>Before contributing, please read our contribution guidelines carefully. These guidelines cover the process for submitting bugs, requesting new features, and preparing code for submission.</p>"},{"location":"contributing/#community-and-support","title":"Community and Support","text":"<p>Join the Allfeat community on Discord to ask questions, share your projects, and find partners for collaboration. Engaging with the community is a great way to get involved.</p>"},{"location":"contributing/#acknowledgements","title":"Acknowledgements","text":"<p>Every contribution matters, and we thank you for your efforts. By contributing to Allfeat, you're helping to create a more robust, efficient, and open platform for everyone.</p> <p>We look forward to your contributions and are excited to see how together, we can push the boundaries of decentralized technology.</p>"},{"location":"faq/","title":"Frequently Asked Questions (FAQ)","text":"<p>This FAQ section aims to address common questions and concerns about using and interacting with the Allfeat platform. From setting up your development environment to running a validator node, find quick answers to your queries here.</p>"},{"location":"faq/#general-questions","title":"General Questions","text":""},{"location":"faq/#q-what-is-allfeat","title":"Q: What is Allfeat?","text":"<p>A: Allfeat is a blockchain platform designed for the development and deployment of decentralized applications (DApps) and smart contracts. It offers robust features for developers, including support for the Ethereum Virtual Machine (EVM).</p>"},{"location":"faq/#q-how-does-allfeat-differ-from-other-blockchain-platforms","title":"Q: How does Allfeat differ from other blockchain platforms?","text":"<p>A: Allfeat stands out due to its compatibility with the EVM, allowing developers to easily migrate existing Ethereum-based DApps to the platform. It also offers unique features geared towards scalability and interoperability.</p>"},{"location":"faq/#technical-questions","title":"Technical Questions","text":""},{"location":"faq/#q-how-do-i-set-up-my-development-environment-for-allfeat","title":"Q: How do I set up my development environment for Allfeat?","text":"<p>A: Please refer to the Prerequisites and Installing Allfeat from Source documents for detailed instructions on setting up your environment.</p>"},{"location":"faq/#q-what-programming-languages-can-i-use-to-develop-smart-contracts-on-allfeat","title":"Q: What programming languages can I use to develop smart contracts on Allfeat?","text":"<p>A: You can use Ink!, a Rust-based eDSL, for writing Wasm smart contracts, or Solidity for EVM-compatible smart contracts.</p>"},{"location":"faq/#q-can-i-run-allfeat-without-docker","title":"Q: Can I run Allfeat without Docker?","text":"<p>A: Yes, you can run Allfeat directly on your operating system. Please see Running a Local Node without Docker for instructions.</p>"},{"location":"faq/#validator-questions","title":"Validator Questions","text":""},{"location":"faq/#q-how-do-i-become-a-validator-on-allfeat","title":"Q: How do I become a validator on Allfeat?","text":"<p>A: Becoming a validator involves staking tokens, setting up your node, and being selected into the validator set. For more details, visit Initializing a Validator Node on Allfeat and Running Your Node as a Validator on Allfeat.</p>"},{"location":"faq/#q-what-are-the-risks-of-being-a-validator","title":"Q: What are the risks of being a validator?","text":"<p>A: Validators are responsible for securing the network and can be penalized for actions such as double-signing or significant downtime. Ensure your node is secure and operates consistently.</p>"},{"location":"faq/#troubleshooting","title":"Troubleshooting","text":""},{"location":"faq/#q-my-node-wont-start-what-should-i-do","title":"Q: My node won't start. What should I do?","text":"<p>A: Check your node's logs for errors. Common issues include incorrect configurations or missing dependencies. Refer to Running a Local Node for setup details.</p>"},{"location":"faq/#q-how-can-i-troubleshoot-smart-contract-deployment-issues","title":"Q: How can I troubleshoot smart contract deployment issues?","text":"<p>A: Ensure your contract is correctly compiled and that you're connected to the Allfeat node. For deployment issues, consult the Deployment of Smart Contracts on Allfeat guide.</p>"},{"location":"faq/#more-information","title":"More Information","text":"<p>For more detailed information and guides, visit the Allfeat Documentation. If your question is not covered in this FAQ, join the Allfeat community forums or Discord channel for support.</p>"},{"location":"prerequisites/","title":"Prerequisites for Running Allfeat","text":"<p>Before you dive into Allfeat, there are a few prerequisites you'll need to have in place. This guide outlines the necessary steps to prepare your environment for running a local node, developing DApps, or becoming a validator on the Allfeat network.</p>"},{"location":"prerequisites/#system-requirements","title":"System Requirements","text":"<p>To run Allfeat smoothly, your system should meet the following minimum requirements:</p> <ul> <li>Operating System: Ubuntu 18.04 or later, macOS, or a compatible Linux distribution</li> <li>Processor: Intel Core i5 or equivalent</li> <li>Memory: 8 GB RAM</li> <li>Storage: 50 GB available space</li> </ul>"},{"location":"prerequisites/#software-dependencies","title":"Software Dependencies","text":""},{"location":"prerequisites/#docker","title":"Docker","text":"<p>Allfeat nodes can be run inside Docker containers for ease of setup and isolation. If you choose to use Docker, you must install it first:</p> <ul> <li>Ubuntu/Linux: Install Docker</li> <li>macOS: Install Docker Desktop for Mac</li> <li>Windows: Install Docker Desktop for Windows</li> </ul>"},{"location":"prerequisites/#rust-and-cargo","title":"Rust and Cargo","text":"<p>For developing smart contracts or running nodes from source, Rust and Cargo are required:</p> <ul> <li>Install Rust: Follow the instructions on the official Rust website.</li> </ul>"},{"location":"prerequisites/#git","title":"Git","text":"<p>Git is required to clone the Allfeat repository:</p> <ul> <li>Install Git: Follow the installation guide on the Git website.</li> </ul>"},{"location":"prerequisites/#additional-tools","title":"Additional Tools","text":"<p>Depending on your development needs, you might also need the following:</p> <ul> <li>Node.js and npm: For developing and testing DApps.</li> <li>Web3.js or Ethers.js: Libraries for interacting with Ethereum-based blockchains.</li> </ul> <p>Once you have completed these steps, you're ready to start working with Allfeat. The next section of this documentation will guide you through the process of running a local node.</p>"},{"location":"installation/docker/","title":"Installing Allfeat with Docker","text":"<p>Docker provides a straightforward and isolated environment for running Allfeat nodes. This guide walks you through the process of setting up Allfeat using Docker.</p>"},{"location":"installation/docker/#installing-docker","title":"Installing Docker","text":"<p>Before running Allfeat inside a Docker container, you must have Docker installed on your machine. Please refer to the Prerequisites section for Docker installation instructions.</p>"},{"location":"installation/docker/#cloning-the-allfeat-repository","title":"Cloning the Allfeat Repository","text":"<p>First, clone the Allfeat repository to your local machine:</p> <pre><code>git clone https://github.com/Allfeat/Allfeat.git &amp;&amp; cd Allfeat\n</code></pre>"},{"location":"installation/docker/#building-the-docker-image","title":"Building the Docker Image","text":"<p>Once you have the repository, you can build the Docker image using the Dockerfile provided:</p> <pre><code>docker build -t allfeat .\n</code></pre> <p>This command builds a Docker image named <code>allfeat</code> based on the instructions in the Dockerfile.</p>"},{"location":"installation/docker/#verifying-the-docker-image","title":"Verifying the Docker Image","text":"<p>After the build process completes, you can verify that the Docker image has been created successfully:</p> <pre><code>docker images | grep allfeat\n</code></pre> <p>You should see the <code>allfeat</code> image listed in the output.</p>"},{"location":"installation/docker/#running-allfeat-inside-docker","title":"Running Allfeat Inside Docker","text":"<p>To run Allfeat inside a Docker container, use the following command:</p> <pre><code>docker run -p 9944:9944 -p 9933:9933 -p 30333:30333 allfeat\n</code></pre> <p>This command starts a container from the Allfeat image and maps the necessary ports for the Allfeat node to communicate with the outside world.</p> <p>Congratulations! You've successfully set up and run Allfeat inside a Docker container. This setup allows you to run a local Allfeat node for development, testing, or validation purposes.</p> <p>For additional configurations and advanced Docker options, refer to the official Docker documentation.</p>"},{"location":"installation/from-source/","title":"Installing Allfeat from Source","text":"<p>Compiling Allfeat from the source code offers the most flexibility for customization and optimization. Follow these steps to set up your Allfeat node by compiling it directly from the source.</p>"},{"location":"installation/from-source/#prerequisites","title":"Prerequisites","text":"<p>Ensure you have Rust and Cargo installed on your system. For Rust installation, please refer to the Prerequisites document. You also need Git for cloning the repository.</p>"},{"location":"installation/from-source/#cloning-the-allfeat-repository","title":"Cloning the Allfeat Repository","text":"<p>To get started, clone the Allfeat repository to your local machine:</p> <pre><code>git clone https://github.com/Allfeat/Allfeat.git &amp;&amp; cd Allfeat\n</code></pre>"},{"location":"installation/from-source/#updating-rust-and-adding-necessary-components","title":"Updating Rust and Adding Necessary Components","text":"<p>Make sure your Rust installation is up to date, and add the necessary components for compiling Allfeat:</p> <pre><code>rustup update &amp;&amp; rustup show\nrustup target add wasm32-unknown-unknown\nrustup component add rust-src\n</code></pre>"},{"location":"installation/from-source/#compiling-allfeat","title":"Compiling Allfeat","text":"<p>Compile the Allfeat binary with the following command:</p> <pre><code>cargo build --locked --release\n</code></pre> <p>This step may take some time as it compiles the entire Allfeat codebase into a runnable binary.</p>"},{"location":"installation/from-source/#verifying-the-installation","title":"Verifying the Installation","text":"<p>Once the build process is complete, you can verify that Allfeat has been installed correctly by checking the version of the compiled binary:</p> <pre><code>./target/release/allfeat -V\n</code></pre> <p>You should see the version number of Allfeat displayed in your terminal.</p> <p>Congratulations! You have successfully compiled and installed Allfeat from the source code. You're now ready to run your local Allfeat node for development, testing, or even as a validator node.</p> <p>For more information on running your node and advanced configuration options, refer to the following sections of this documentation.</p>"},{"location":"running-a-node/docker/","title":"Running a Local Node with Docker","text":"<p>Running Allfeat within a Docker container simplifies the setup and ensures a consistent environment across all platforms. Follow these steps to run your local Allfeat node using Docker.</p>"},{"location":"running-a-node/docker/#prerequisites","title":"Prerequisites","text":"<p>Ensure Docker is installed and running on your system. If you haven't installed Docker yet, please refer to the Installing Allfeat with Docker section.</p>"},{"location":"running-a-node/docker/#running-the-allfeat-node","title":"Running the Allfeat Node","text":"<p>After building the Allfeat Docker image, you can start your local node with the following command:</p> <pre><code>docker run -p 9944:9944 -p 9933:9933 -p 30333:30333 allfeat\n</code></pre> <p>This command runs the Allfeat node inside a Docker container and exposes the necessary ports for P2P networking and JSON-RPC interfaces.</p>"},{"location":"running-a-node/docker/#verifying-the-node-is-running","title":"Verifying the Node is Running","text":"<p>To verify that your Allfeat node is running inside Docker, you can use the following command:</p> <pre><code>docker ps\n</code></pre> <p>You should see your Allfeat container listed among the running containers.</p>"},{"location":"running-a-node/docker/#interacting-with-the-node","title":"Interacting with the Node","text":"<p>You can interact with your Allfeat node using the JSON-RPC interface or by connecting to it using a substrate frontend template. Make sure to adjust the port forwarding settings in the Docker run command if you modify the default ports in the Allfeat node configuration.</p>"},{"location":"running-a-node/docker/#stopping-the-node","title":"Stopping the Node","text":"<p>To stop your Allfeat node running inside Docker, use the Docker stop command followed by the container ID or name:</p> <pre><code>docker stop &lt;container_id_or_name&gt;\n</code></pre> <p>Congratulations! You have successfully run an Allfeat node locally using Docker. This setup allows you to develop and test your DApps or smart contracts in an environment that closely mimics a live blockchain network.</p> <p>For more advanced Docker configurations and options, refer to the official Docker documentation.</p>"},{"location":"running-a-node/without-docker/","title":"Running a Local Node without Docker","text":"<p>For developers and validators who prefer or need to run Allfeat directly on their native operating system without Docker, this guide will walk you through the process.</p>"},{"location":"running-a-node/without-docker/#prerequisites","title":"Prerequisites","text":"<p>Ensure you have compiled Allfeat from source as described in the Installing Allfeat from Source section. Additionally, make sure your system meets the prerequisites outlined in the Prerequisites document.</p>"},{"location":"running-a-node/without-docker/#running-the-allfeat-node","title":"Running the Allfeat Node","text":"<p>After compiling Allfeat, you can start your local node with the following command from the root of the Allfeat directory:</p> <pre><code>./target/release/allfeat --dev\n</code></pre> <p>This command starts the Allfeat node in development mode, making it easier to develop and test your DApps or smart contracts. The <code>--dev</code> flag resets the state with every restart, providing a fresh environment for each session.</p>"},{"location":"running-a-node/without-docker/#verifying-the-node-is-running","title":"Verifying the Node is Running","text":"<p>To verify that your Allfeat node is running, open a new terminal window and use curl or any other tool to make a JSON-RPC call to the node:</p> <pre><code>curl -H \"Content-Type: application/json\" --data '{\"jsonrpc\":\"2.0\",\"method\":\"system_health\",\"params\":[],\"id\":1}' http://localhost:9933\n</code></pre> <p>You should receive a response indicating that the node is running and healthy.</p>"},{"location":"running-a-node/without-docker/#stopping-the-node","title":"Stopping the Node","text":"<p>To stop your Allfeat node, simply press <code>Ctrl+C</code> in the terminal where the node is running. This will gracefully shut down the node and preserve the current state if not in <code>--dev</code> mode.</p> <p>Congratulations! You have successfully run an Allfeat node locally without using Docker. This setup allows for deeper integration with your local development environment and can be more suitable for certain testing scenarios or continuous integration setups.</p> <p>For more information on node configuration and advanced run options, refer to the Allfeat documentation and command-line help.</p>"},{"location":"smart-contracts/deployment/","title":"Deployment of Smart Contracts on Allfeat","text":"<p>Deploying your smart contracts to the Allfeat blockchain is the final step in making your DApps accessible to users. This guide outlines the process of deploying smart contracts on Allfeat, including preparing for deployment and using deployment tools.</p>"},{"location":"smart-contracts/deployment/#prerequisites","title":"Prerequisites","text":"<ul> <li>Completion of a smart contract using Ink! or Solang as described in Developing Smart Contracts on Allfeat.</li> <li>A running local or remote Allfeat node accessible via HTTP or WebSocket.</li> </ul>"},{"location":"smart-contracts/deployment/#deployment-tools","title":"Deployment Tools","text":""},{"location":"smart-contracts/deployment/#polkadotjs-apps","title":"Polkadot{.js} Apps","text":"<p>The Polkadot{.js} Apps UI is a versatile tool that allows you to interact with the Allfeat blockchain directly from your web browser. It includes functionalities for deploying and interacting with smart contracts.</p> <ul> <li>Access the Polkadot{.js} Apps UI: Navigate to https://polkadot.js.org/apps/ and connect to your Allfeat node.</li> </ul>"},{"location":"smart-contracts/deployment/#cargo-contract-cli","title":"cargo-contract CLI","text":"<p>The <code>cargo-contract</code> CLI tool, used for developing Ink! smart contracts, also provides functionalities for deploying contracts.</p> <pre><code>cargo contract deploy --node &lt;node_url&gt; --suri &lt;secret_uri&gt; --name &lt;contract_name&gt;\n</code></pre> <p>Replace <code>&lt;node_url&gt;</code>, <code>&lt;secret_uri&gt;</code>, and <code>&lt;contract_name&gt;</code> with your node's WebSocket URL, your account's secret URI, and the name of your contract, respectively.</p>"},{"location":"smart-contracts/deployment/#preparing-for-deployment","title":"Preparing for Deployment","text":"<ol> <li>Build Your Smart Contract: Ensure your smart contract is compiled and optimized for deployment.</li> </ol> <pre><code>cargo contract build --release\n</code></pre> <ol> <li>Generate Contract Metadata: Generate metadata for your contract, which is necessary for interaction after deployment.</li> </ol> <pre><code>cargo contract generate-metadata\n</code></pre>"},{"location":"smart-contracts/deployment/#deploying-your-smart-contract","title":"Deploying Your Smart Contract","text":"<ol> <li>Using Polkadot{.js} Apps UI: </li> <li>Navigate to the \"Developer\" -&gt; \"Contracts\" section.</li> <li>Click on \"Deploy a code\" and upload your contract's <code>.contract</code> bundle file.</li> <li> <p>Follow the UI instructions to deploy your contract.</p> </li> <li> <p>Using cargo-contract CLI:</p> </li> <li>Ensure your local node is running or you have the URL of a remote Allfeat node.</li> <li>Use the <code>cargo contract deploy</code> command with the appropriate flags for your contract and account.</li> </ol>"},{"location":"smart-contracts/deployment/#verifying-the-deployment","title":"Verifying the Deployment","text":"<p>After deploying your contract, verify its presence on the blockchain:</p> <ul> <li>Polkadot{.js} Apps UI: Navigate to the \"Contracts\" section and see if your contract appears in the list.</li> <li>Subscan Explorer: Use Allfeat's instance of the Subscan explorer to search for your contract's address and examine its transactions and status.</li> </ul> <p>Congratulations! You have successfully deployed a smart contract to the Allfeat blockchain. Your DApp is now ready for interaction by users.</p> <p>For more detailed information on smart contract deployment and interaction, consult the Ink! and Polkadot{.js} documentation.</p>"},{"location":"smart-contracts/deployment/#ink","title":"Ink!","text":"<p>You may use Ink! in place of the tools presented here. please follow their documentation - Ink Documentation</p>"},{"location":"smart-contracts/developing/","title":"Smart Contract Development Guide","text":""},{"location":"smart-contracts/developing/#allfeat-blockchain","title":"Allfeat Blockchain","text":"<p>Develop your smart contracts (DAPPS) on the Allfeat blockchain. The Allfeat Contracts repository serves as an excellent starting point for contract development and deployment. It includes a comprehensive set of examples, such as AFT22, AFT34, and AFT37. Refer to the following documentations for a quick start:</p> <ul> <li>Allfeat Documentation</li> <li>Substrate Documentation</li> </ul>"},{"location":"smart-contracts/developing/#ink","title":"Ink!","text":"<p>You may use Ink! in place of the tools presented here. please follow their documentation - Ink Documentation</p>"},{"location":"smart-contracts/developing/#ethereum-compatibility","title":"Ethereum Compatibility","text":"<p>If you prefer to develop smart contracts on Ethereum (EVM compatible), consult the OpenZeppelin documentation \u2013 the reference for Ethereum smart contract development, here is a tutorial using Hardhat just below.</p>"},{"location":"smart-contracts/developing/#hardhat-setup-for-allfeat","title":"Hardhat Setup for Allfeat","text":"<p>To launch your smart contract on the Allfeat blockchain using Hardhat, follow these steps:</p> <ul> <li>Initialize <code>hardhat.config.js</code>:</li> </ul> <pre><code>require(\"@nomicfoundation/hardhat-toolbox\");\nrequire(\"dotenv\").config();\nconst { PRIVATE\\_KEY\\_1, PRIVATE\\_KEY\\_2, PRIVATE\\_KEY\\_3 } = process.env;\n\nmodule.exports = {\nsolidity: \"0.8.19\",\n    networks: {\n        local: {\n            url: \"http://127.0.0.1:9944\", // URL to your local blockchain\n            accounts: \\[PRIVATE\\_KEY\\_1, PRIVATE\\_KEY\\_2, PRIVATE\\_KEY\\_3\\].filter((pk) =&gt; pk !== undefined) // Filter out undefined keys\n        },\n        testnet: {\n            url: \"https://harmonie-endpoint-02.allfeat.io\", // URL to harmony testnet\n            accounts: \\[PRIVATE\\_KEY\\_1, PRIVATE\\_KEY\\_2, PRIVATE\\_KEY\\_3\\].filter((pk) =&gt; pk !== undefined) // Filter out undefined keys\n        }\n    }\n};\n</code></pre> <ul> <li> <p>Launch it on your local blockchain:</p> <p><code>npx hardhat run scripts/deploy.js --network local  # Run on the local node</code></p> </li> <li> <p>Launch it on the testnet:</p> <p><code>npx hardhat run scripts/deploy.js --network testnet  # Run on the testnet</code></p> </li> </ul> <p>Now, you're ready to deploy your smart contracts on the Allfeat blockchain using Hardhat.</p> <p>You may use Hardhat Documentation to test those contracts</p>"},{"location":"validator-node/prerequisites/","title":"Prerequisites to become a Validator Node on Allfeat","text":"<p>Becoming a validator on the Allfeat network involves setting up and initializing your node to participate in the consensus process. This guide provides the steps necessary to prepare your node for validator duties.</p>"},{"location":"validator-node/prerequisites/#prerequisites","title":"Prerequisites","text":"<p>Before initializing your node, ensure you have:</p> <ul> <li>Successfully installed Allfeat from source or Docker as described in the Installation and Configuration section.</li> <li>A secure and reliable server environment that meets the recommended system requirements.</li> </ul>"},{"location":"validator-node/prerequisites/#generate-your-keys","title":"Generate your keys","text":"<p>You will need to have subkey installed</p> <ul> <li>Firstly you need to generate a GRANDPA key (Gossiping Finality GRANDPA)</li> </ul> <pre><code>subkey generate --scheme Ed25519\n</code></pre> <ul> <li>Seclondly you will need to generate a BABE (Blind Assignment for Blockchain Extension) key</li> </ul> <pre><code>subkey generate --scheme Sr25519\n</code></pre> <ul> <li>Thirdly you will need to generate an ImOnline key</li> </ul> <pre><code>subkey generate --scheme Sr25519\n</code></pre> <ul> <li>And fourthly you will need to generate an Authority Discovery key</li> </ul> <pre><code>subkey generate --scheme Sr25519\n</code></pre>"},{"location":"validator-node/prerequisites/#insert-your-keys","title":"Insert your keys","text":"<ul> <li>Grandpa key (using his secret)</li> </ul> <pre><code>./target/release/allfeat key insert --base-path \"$NODE_PATH\" --chain testnet --scheme Ed25519 --suri \"grandpaSecretKey\" --key-type gran\n</code></pre> <ul> <li>Babe key (using his secret)</li> </ul> <pre><code>./target/release/allfeat key insert --base-path \"$NODE_PATH\" --chain testnet --scheme Sr25519 --suri \"babeSecretKey\" --key-type babe\n</code></pre> <ul> <li>Imon key (using his secret)</li> </ul> <pre><code>./target/release/allfeat key insert --base-path \"$NODE_PATH\" --chain testnet --scheme Sr25519 --suri \"imonSecretKey\" --key-type imon\n</code></pre> <ul> <li>Audi key (using his secret)</li> </ul> <pre><code>./target/release/allfeat key insert --base-path \"$NODE_PATH\" --chain testnet --scheme Sr25519 --suri \"audiSecretKey\" --key-type audi\n</code></pre> <p>These commands generate key pairs (public and private) that you can use to configure your validators or authorities in your Substrate blockchain. Note that using these keys in a production environment should be done with care, including securing the private keys and never sharing them.</p>"},{"location":"validator-node/running-as-validator/","title":"Running Your Node as a Validator on Allfeat","text":"<p>After initializing your node as detailed in the Initializing a Validator Node on Allfeat (prerequisites) section, you're ready to start your journey as a validator. This guide will walk you through running your node as a validator and joining the Allfeat validator set.</p>"},{"location":"validator-node/running-as-validator/#prerequisites","title":"Prerequisites","text":"<p>Ensure that your node has been:</p> <ul> <li>Configured with the necessary validator keys. (here)</li> </ul>"},{"location":"validator-node/running-as-validator/#starting-your-validator-node","title":"Starting Your Validator Node","text":"<p>To start your node in validator mode, run the following command:</p> <pre><code>./target/release/allfeat --base-path /path/to/node/data --name MyValidatorNode --telemetry-url 'wss://telemetry.polkadot.io/submit/ 0' --validator\n</code></pre> <p>Make sure to replace <code>/path/to/node/data</code> with your actual data directory and <code>MyValidatorNode</code> with the name you want to give your node.</p>"},{"location":"validator-node/running-as-validator/#joining-the-validator-set","title":"Joining the Validator Set","text":"<p>To participate in the consensus and be eligible for block production and rewards, your node must be selected into the validator set. This involves:</p> <ol> <li> <p>Staking Tokens: Lock a certain amount of tokens as stake. This acts as a security deposit, ensuring validators act in the network's best interest.</p> <ul> <li>Use the Polkadot{.js} Apps UI to stake tokens and nominate your validator.</li> </ul> </li> <li> <p>Setting Session Keys: Inform the network about your validator's session keys.</p> <ul> <li>This is done through a transaction, which can also be submitted via the Polkadot{.js} Apps UI.</li> </ul> </li> <li> <p>Waiting for the Next Era: Validator selection happens at the beginning of each era. Your node will start validating if it's chosen for the active validator set.</p> </li> </ol>"},{"location":"validator-node/running-as-validator/#monitoring-your-validator","title":"Monitoring Your Validator","text":"<p>It's crucial to monitor your validator's performance and status:</p> <ul> <li>Telemetry: Connect your node to Allfeat's telemetry service to monitor its status and metrics.</li> <li>Logs: Regularly check your node's logs for warnings, errors, or any signs of misbehavior.</li> </ul>"},{"location":"validator-node/running-as-validator/#maintaining-your-validator","title":"Maintaining Your Validator","text":"<p>Running a validator node requires diligent maintenance:</p> <ul> <li>Keep Your Node Updated: Regularly update your node software to the latest version.</li> <li>Secure Your Validator: Implement security best practices to protect your node from attacks.</li> <li>Be Active: Ensure your node remains online and active. Downtime can result in penalties or slashing.</li> </ul> <p>Congratulations! You are now running a validator node on Allfeat. By participating as a validator, you play a critical role in securing the network and processing transactions.</p> <p>Remember, being a validator comes with responsibilities. Maintaining your node's security and operation is crucial for the health of the network and the security of your staked tokens.</p>"}]}